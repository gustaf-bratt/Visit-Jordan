////  TourOperatorViewController.m//  Visit Jordan////  Created by Faris on 11/6/13.////#import "TourOperatorViewController.h"#import "TourOperatorCell.h"#import "LoadHotelsJSONData.h"#import "UIImage+StackBlur.h"#import "HeaderView.h"#import <QuartzCore/QuartzCore.h>#import <UIKit/UIColor.h>#import "UIColor_Hex.h"#import "InternetConnection.h"#import  "HUD.h"#define IS_HEIGHT_GTE_568 [[UIScreen mainScreen ] bounds].size.height >= 568.0f#define SCREEN_HEIGHT [[UIScreen mainScreen ] bounds].size.height>=568.0f?480:300;@interface TourOperatorViewController ()@property NSDictionary * ListOfData;@property (nonatomic,strong) NSArray *arrayOfData;@property NSInteger listsize;@end@implementation TourOperatorViewController@synthesize ListOfData,arrayOfData,listsize;@synthesize BlurBackground,NormalBackground,BluredImage,cTable;@synthesize LabeltextDescription,LabelViewTitle,backgroundImageName;@synthesize textViewDescription,textViewTitle,ViewTitle,ViewName;@synthesize descriptionPlaceHolderSize;float alpha,sectionHeight;HeaderView *v;- (void)viewDidLoad{    [super viewDidLoad];    UIImage *image = [UIImage imageNamed: backgroundImageName];    [NormalBackground setImage:image];        BluredImage= [[UIImage imageNamed:backgroundImageName] stackBlur:100];        [BlurBackground setImage:BluredImage];    BlurBackground.alpha=0;            cTable.backgroundColor = [UIColor clearColor];    cTable.backgroundView = [UIView new] ;            self.cTable.rowHeight = 220;        if (IS_HEIGHT_GTE_568) {        v =[[[NSBundle mainBundle]loadNibNamed:@"HeaderView" owner:Nil options:nil]lastObject];            } else {        v =[[[NSBundle mainBundle]loadNibNamed:@"HeaderView-IponeS4" owner:Nil options:nil]lastObject];            }     textViewTitle=@"Tour Operators";    v.parentViewName.text=ViewTitle;    v.ViewName.text=textViewTitle;    [v.ViewName setFont:[UIFont fontWithName:@"Ubuntu-Light" size:30]];    self.title=textViewTitle;     [v setFrame:CGRectMake(0, 0, 320, self.cTable.bounds.size.height)];    v.backgroundColor =[UIColor clearColor];    self.cTable.tableHeaderView =v;            if ([self connectedToInternet]) {              [HUD showUIBlockingIndicatorWithText:@"Loading... Please Wait" withTimeout:8];                dispatch_queue_t loadJSON = dispatch_queue_create("Load JSON Feed",NULL);                dispatch_async(loadJSON, ^{                        //NSLog(@"loading Started...");            NSString *url = [[NSString alloc]initWithFormat:@"http://serv01.vm1692.sgvps.net/~karasi/visitjordan/TourOperator.php" ];                        NSData* ytData = [NSData dataWithContentsOfURL:                              [NSURL URLWithString:url]                              ];                  if (ytData!=Nil) {                self.ListOfData = [NSJSONSerialization                                   JSONObjectWithData:ytData                                   options:kNilOptions                                   error:nil];                            }               NSLog(@"%@",ListOfData);            dispatch_async(dispatch_get_main_queue(), ^{                                //NSLog(@"JSON:%@",json);                //NSLog(@"loading finished");                [HUD hideUIBlockingIndicator];                                if (ListOfData !=nil)                {                    self.arrayOfData = [ListOfData objectForKey:@"TourOp"];                    listsize =  arrayOfData.count;                    [self.cTable reloadData];                                    }else{                                        UIAlertView *someError = [[UIAlertView alloc] initWithTitle: @"Network Error"                                                                        message: @"Error connecting to the internet"                                                                       delegate: self cancelButtonTitle: @"Ok" otherButtonTitles: nil];                    [someError show];                    self.ListOfData=nil;                }                            });                    });    } }- (BOOL)connectedToInternet{    InternetConnection *networkReachability = [InternetConnection reachabilityForInternetConnection];    NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];        return networkStatus == NotReachable ?FALSE:TRUE;}-(void)loadJSON:(NSString *)url{        NSData* ytData = [NSData dataWithContentsOfURL:                      [NSURL URLWithString:url]                      ];        if (ytData != nil) {        self.ListOfData = [NSJSONSerialization                           JSONObjectWithData:ytData                           options:kNilOptions                           error:nil];    }    else          self.ListOfData=nil;           }#pragma mark - Table view data source- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{    return 2;}- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{    int rows = 0;        if (section==0) {        rows = 0;    }    else if (section==1){        rows = arrayOfData.count;;    }    return rows;   }-(BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange{        //Do something with the URL    NSLog(@"%@", URL);            return NO;}- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{    static NSString *CellIdentifier = @"Cell";        [self.cTable registerNib:[UINib nibWithNibName:@"TourOperatorCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:CellIdentifier];    TourOperatorCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];        if (cell == nil) {                cell = [[TourOperatorCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];    }    if (listsize >0) {                [cell.t_name setFont:[UIFont fontWithName:@"Ubuntu-Light" size:15]];        [cell.t_phone setFont:[UIFont fontWithName:@"Ubuntu-Light" size:15]];        [cell.t_email setFont:[UIFont fontWithName:@"Ubuntu-Light" size:15]];        //[cell.t_webaddress setFont:[UIFont fontWithName:@"Ubuntu-Light" size:15]];        cell.t_name.text=[[NSString alloc]initWithFormat:@"%@",[arrayOfData[indexPath.row] objectForKey:@"tour-name"]];        cell.t_phone.text=[[NSString alloc]initWithFormat:@"%@",[arrayOfData[indexPath.row] objectForKey:@"phone"]];        cell.t_email.text=[[NSString alloc]initWithFormat:@"%@",[arrayOfData[indexPath.row] objectForKey:@"email"]];        //cell.t_webaddress.text=[[NSString alloc]initWithFormat:@"%@",[arrayOfData[indexPath.row] objectForKey:@"website"]];        cell.webLink.dataDetectorTypes = UIDataDetectorTypeLink;        cell.webLink.selectable=YES;        cell.webLink.text=[[NSString alloc]initWithFormat:@"%@",[arrayOfData[indexPath.row] objectForKey:@"website"]];                    }        UIView *separatorLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 10)];    separatorLineView.backgroundColor = [UIColor clearColor];    [cell.contentView addSubview:separatorLineView];        //================ Cell Padding ==============//    cell.backgroundColor = [UIColor clearColor];    cell.backgroundView = [UIView new] ;    cell.selectedBackgroundView = nil;    //============================================//    return cell;}- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{    if (section==0) {        return [self getTextHeight];    }    return 0;}-(CGFloat)getTextHeight{        return descriptionPlaceHolderSize;}- (void)scrollViewDidScroll:(UIScrollView *)scrollView{    int headerView = self.cTable.contentOffset.y;        v.buttomArrow.image=nil;        if (headerView==0) {        v.buttomArrow.image=[UIImage imageNamed:@"Down-arrow.png"];    }    int y=SCREEN_HEIGHT;    if (headerView >= 0 && headerView <= self.cTable.bounds.size.height ) {        alpha = headerView / (float) y;                alpha+=0.266999;                if (alpha > 1) {            alpha = 1;        }                BlurBackground.alpha=alpha;            }}- (void)didReceiveMemoryWarning{    [super didReceiveMemoryWarning];}@end